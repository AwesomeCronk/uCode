// This is the microcode from SiliconPython's MMU on 23-3-17, taken as an example of a microcode description.
// https://github.com/AwesomeCronk/SiliconPython

{
    NumControlLines: 24,
    NumConditionLines: 3,
    NumStates: 8,
    NumSteps: 8,

    ControlLines: [
        'Available_In',
        'Available_Out',
        'Desired_In',
        'Desired_Out',
        'Remaining_Out',
        'First_In',
        'First_Out',
        'Previous_In',
        'Previous_Out',
        'Testing_In',
        'Testing_Out',
        'Split_Out',
        'Next_In',
        'Next_Out',
        'Memory_Address',
        'Memory_AddressOffset',
        'Memory_Read',
        'Memory_Write',
        'CPU_Enable',
        '',
        'State_Set',
        'State_2',
        'State_1',
        'State_0'
    ],

    ConditionLines: [
        'Sufficient',
        'PreviousIsFirst',
        'Ctrl_Alloc'
    ],

    DefaultStep: [],

    States:
    {
        blank: [],

        Idle: [
            {
                'Ctrl_Alloc': ['/SetState:Init'],
                '': ['CPU_Enable', 'State_Set']
            }
        ],

        Init: [
            ['Desired_In'],
            ['First_Out', 'Next_In'],
            ['Testing_In'],
            ['/SetState:Compare'],
        ],

        Compare: [
            ['Testing_Out', 'Previous_In'],
            ['Next_Out', 'Testing_In'],
            ['Testing_Out', 'Memory_Address'],
            ['Memory_Read', 'Available_In'],
            {
                'Sufficient': ['/SetState:SplitBlock'],
                '': ['/SetState:Walk']
            }
        ],

        Walk: [
            ['Testing_Out', 'Memory_AddressOffset'],
            ['Memory_Read', 'Next_In'],
            ['/SetState:Compare']
        ],

        SplitBlock: [
            ['Split_Out', 'Memory_Address'],
            ['Memory_Write', 'Remaining_Out'],
            ['Testing_Out', 'Memory_AddressOffset'],
            ['Memory_Read', 'Next_In'],
            ['Split_Out', 'Memory_AddressOffset'],
            ['Memory_Write', 'Next_Out'],
            {
                'PreviousIsFirst': ['/SetState:RelocateFirstBlock'],
                '': ['/SetState:RedirectPreviousBlock']
            }
        ],

        RedirectPreviousBlock: [
            ['Previous_Out', 'Memory_AddressOffset'],
            ['Memory_Read', 'Next_In'],
            ['/SetState:Idle']
        ],

        RelocateFirstBlock: [
            ['Testing_Out', 'Memory_AddressOffset'],
            ['Memory_Read', 'First_In'],
            ['/SetState:Idle']
        ],
    },

    StateOrder: [
        'Idle',
        'Init',
        'Compare',
        'Walk',
        'SplitBlock',
        'RedirectPreviousBlock',
        'RelocateFirstBlock',
        'blank'
    ]
}
